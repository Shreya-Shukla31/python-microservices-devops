name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
      EMAIL_USER: ${{ secrets.EMAIL_USER }}
      EMAIL_PASS: ${{ secrets.EMAIL_PASS }}
      EMAIL_TO: ${{ secrets.EMAIL_TO }}

    steps:
      # Step 1: Checkout repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Login to DockerHub before build
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Step 3: Setup Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      # Step 4: Install backend dependencies
      - name: Install backend dependencies
        run: |
          cd backend
          pip install -r requirements.txt

      # Step 5: Run backend tests (optional: continue even if tests fail)
      - name: Run backend tests
        run: |
          cd backend
          pytest || echo "Tests failed, but continuing to Docker build"

      # Step 6: Build Docker images with detailed logging
      - name: Build Docker images
        run: |
          echo "Building backend image..."
          docker build -t $DOCKERHUB_USERNAME/backend:latest ./backend || { echo "Backend build failed"; exit 1; }

          echo "Building frontend image..."
          docker build -t $DOCKERHUB_USERNAME/frontend:latest ./frontend || { echo "Frontend build failed"; exit 1; }

          echo "Building logger image..."
          docker build -t $DOCKERHUB_USERNAME/logger:latest ./logger || { echo "Logger build failed"; exit 1; }

      # Step 7: Push Docker images
      - name: Push Docker images
        run: |
          docker push $DOCKERHUB_USERNAME/backend:latest
          docker push $DOCKERHUB_USERNAME/frontend:latest
          docker push $DOCKERHUB_USERNAME/logger:latest

  notify:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: always()  # Runs even if build-and-push fails
    steps:
      - name: Send CI/CD status email
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.EMAIL_USER }}
          password: ${{ secrets.EMAIL_PASS }}
          from: ${{ secrets.EMAIL_USER }}
          to: ${{ secrets.EMAIL_TO }}
          subject: "CI/CD Pipeline Status"
          body: "Your DevOps pipeline for python-microservices-devops has completed. Check logs for details."
          secure: true
